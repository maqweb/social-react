{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","style","formError","fullName","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","ProfileInfo","saveProfile","savePhoto","Preloader","description","profilePhoto","alt","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddPostTextReduxForm","Field","component","placeholder","name","validate","required","MyPosts","React","memo","postsElement","profilePage","posts","p","id","postWrap","postTitle","values","addPost","newPostText","MyPostsContainer","connect","state","dispatch","addPostCreator","Profile","ProfileContainer","render","isAuth","match","params","userId","to","this","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","usersId","withRouter"],"mappings":"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","file":"static/js/3.feabc35c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"img\":\"Profile_img__20unu\",\"description\":\"Profile_description__2GJPq\",\"jobLooking\":\"Profile_jobLooking__27Ujh\",\"jobIcon\":\"Profile_jobIcon__3pjfI\",\"fullName\":\"Profile_fullName__3wAsd\",\"contacts\":\"Profile_contacts__Q7x8U\",\"formError\":\"Profile_formError__3a3HH\",\"profilePhoto\":\"Profile_profilePhoto__2sciI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrap\":\"MyPosts_postWrap__-ejiE\",\"postTitle\":\"MyPosts_postTitle__1Vb_7\",\"posts\":\"MyPosts_posts__3tZ1c\"};","import React, {useEffect, useState} from \"react\";\nimport './../../../App.css'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]);\n\n    const activeteMode = () => {\n        setEditMode(true)\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status)\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    };\n\n    return (\n        <div className=\"styleStatus\">\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activeteMode}> {props.status || '----'}</span>\n            </div>\n            }\n\n            {editMode &&\n            <div>\n                <input autoFocus={true}\n                       onChange={onStatusChange}\n                       onBlur={deactivateEditMode}\n                       value={status}/>\n            </div>\n            }\n        </div>\n    )\n};\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport style from \"../Profile.module.css\";\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <div>\n                <button>Save</button>\n            </div>\n\n            {error && <div className={style.formError}>\n                {error}\n            </div>}\n\n            <div className={style.fullName}>\n                <span><b>Full name:</b></span>\n                {createField('Full name', 'fullName', Input, [])}\n            </div>\n\n            <div>\n                <b>Looking for a job:</b>\n                {createField('', 'lookingForAJob', Input, [], {type: 'checkbox'})}\n            </div>\n\n            <div>\n                <b>My professional skills</b>\n                {createField('My professional skills', 'lookingForAJobDescription', Textarea, [])}\n            </div>\n\n            <div>\n                <b>About me:</b>\n                {createField('About me', 'aboutMe', Textarea, [])}\n            </div>\n\n            <div>\n                <b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={style.contacts}>\n                    <b>{key}:{createField(key, 'contacts.' + key, Input, [])}</b>\n                </div>\n            })}\n            </div>\n        </form>\n    )\n};\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm\n","import React, {useState} from 'react';\r\nimport style from \"../Profile.module.css\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport userPhoto from \"../../../assets/images/user1.png\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, saveProfile, savePhoto}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.description}>\r\n                <div>\r\n                    <h2 className={style.fullName}>{profile.fullName}</h2>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n                    <img className={style.profilePhoto} alt=\"\" src={profile.photos.large || userPhoto}/>\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>Edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Lookin for a job:</b>{profile.lookingForAJob ? 'Yes' : 'No'}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>{profile.lookingForAJobDescription}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me:</b>{profile.aboutMe}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n                return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={style.contacts}>\r\n            <b>{contactTitle}:</b> {contactValue}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\nimport style from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={style.item}>\n        <img src=\"https://avatars.mds.yandex.net/get-pdb/1025945/86f10e6d-eab5-4572-8c07-c672b854d2a5/s1200?webp=false\"\n             alt=\"\"/>\n      { props.message }\n      <div>\n        <span>Likes { props.likesCount }</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport Post from './Post/Post';\nimport style from './MyPosts.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPostTextForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n                   placeholder='Enter your post'\n                   name='newPostText'\n                   validate={[required, maxLength10]}/>\n\n            <button> Add post</button>\n        </form>\n    )\n};\n\nconst AddPostTextReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddPostTextForm);\n\nconst MyPosts = React.memo(props => {\n\n    let postsElement = props.profilePage.posts.map(p => <Post message={p.message}\n                                                              likesCount={p.likesCount}\n                                                              key={p.id}/>);\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n\n    return (\n        <div className={style.postWrap}>\n            <h3 className={style.postTitle}>My posts</h3>\n\n            <AddPostTextReduxForm onSubmit={onAddPost}/>\n            <div className={style.posts}>\n                {postsElement}\n            </div>\n        </div>\n    )\n});\n\n\nexport default MyPosts;","import {addPostCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        profilePage: state.profilePage,\n         newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostCreator(newPostText));\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport style from './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div className={style.profile}>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         isOwner={props.isOwner}\n                         savePhoto={props.savePhoto}\n                         saveProfile={props.saveProfile}\n                         updateStatus={props.updateStatus}/>\n\n            <MyPostsContainer/>\n        </div>\n    )\n};\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus, saveProfile, savePhoto} from \"../../redux/profile-reducer\";\nimport {Redirect, withRouter} from \"react-router-dom\";\n// import {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    };\n\n    componentDidMount(): void {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS): void {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n\n        /* if (!this.props.isAuth) {\n           return <Redirect to={'/login'}/>\n       }*/\n    }\n\n    render = () => {\n        if (!this.props.isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return (\n            <div>\n                <Profile {...this.props}\n                         isOwner={!this.props.match.params.userId}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         savePhoto={this.props.savePhoto}\n                         updateStatus={this.props.updateStatus}/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.usersId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, saveProfile, savePhoto}),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}