{"version":3,"sources":["api/api.js","assets/images/user1.png","redux/dialogs-reducer.js","components/common/Paginator/Paginator.module.css","assets/images/bars.svg","assets/images/logo.svg","assets/images/Redux.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","components/Header/Header.module.css","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/navbar-reducer.js","redux/redux-store.js","hoc/WithSuspense.jsx","App.js","serviceWorker.js","index.js","components/Login/Login.module.css","components/common/FormsControls/FormsControls.module.css","components/common/preloader/Preloader.jsx","utils/validators/validators.js","components/Users/Users.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","id","delete","follow","post","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","ADD_MESSAGE","initialState","dialogsData","name","messagesData","message","value","addMessageCreator","newMessageBody","type","dialogsReducer","state","action","text","length","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","component","validate","Navbar","style","navWrap","nav","item","itemLink","activeClassName","activeLink","to","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","users","totalUsersCount","isFetching","followingInProgress","followSucces","unfollowSucces","setPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","onClick","p","key","e","selectedPage","User","user","userPic","src","photos","small","userPhoto","alt","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgres","UsersContainer","pageNumber","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","container","logoBlock","logo","logoRedux","loginBlock","isAuth","loginLink","usersId","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","loginForm","loginInput","required","rememberBlock","formError","messages","stopSubmit","_error","loginWrap","initialized","appReducer","friends","firstName","secondName","navbarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","navBar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","alert","intializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","maxLengthCreator","maxlength","ADD_POST","DELETE_POST","SET_STATUS","posts","likesCount","addPostCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.86c89913.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '6ab52400-1718-48c6-9e57-f24fa6232ed9'\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n                .then(response => {\n                    return response.data\n                });\n    },\n    unfollow(id) {\n        return instance.delete(`follow/${id}`)\n                .then(response => {\n                    return response.data\n                });\n    },\n    follow(id) {\n        return instance.post(`follow/${id}`)\n                .then(response => {\n                    return response.data\n                });\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please use profileAPI');\n        return profileAPI.getProfile(userId)\n    }\n};\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status})\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile)\n    }\n};\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n};\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n};\n\n","module.exports = __webpack_public_path__ + \"static/media/user1.3bd15153.png\";","const ADD_MESSAGE = 'dialogsReducer/ADD_MESSAGE';\n\nlet initialState = {\n    dialogsData: [\n        {id: 1, name: 'Empty'},\n        {id: 2, name: 'Asdf'},\n        {id: 3, name: 'Qwer'},\n        {id: 4, name: 'Qaz'}\n    ],\n    messagesData: [\n        {id: 1, message: 'Hello React'},\n        {id: 2, message: 'Nice work!'},\n        {id: 3, message: 'Let\\'s do it!'}\n    ],\n    value: '123'\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case ADD_MESSAGE: {\n            let text = action.newMessageBody;\n            return {\n                ...state,\n                messagesData: [...state.messagesData, {id: state.messagesData.length + 1, message: text }],\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport const addMessageCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","module.exports = __webpack_public_path__ + \"static/media/bars.ca49bba4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Redux.dc081a33.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrap\":\"Navbar_navWrap__1Mfl7\",\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"itemLink\":\"Navbar_itemLink__3RW8D\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","import React from \"react\";\nimport styles from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n};\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}> <textarea {...input} {...restProps}/></FormControl>\n};\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}> <input {...input} {...restProps}/></FormControl>\n};\n\nexport const createField = (placeholder, name, component, validate, props) => (\n    <Field placeholder={placeholder}\n           name={name}\n           component={component}\n           validate={validate}\n           {...props}\n    />\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"container\":\"Header_container__1VC87\",\"logoBlock\":\"Header_logoBlock__1MAEm\",\"logo\":\"Header_logo__3_SJs\",\"logo-spin\":\"Header_logo-spin__366Nk\",\"logoRedux\":\"Header_logoRedux__3lK-a\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"loginLink\":\"Header_loginLink__1yPle\"};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport style from './Navbar.module.css';\n// import FriendsBlockContainer from \"./FriendsBlock/FriendsBlockContainer\";\n\nconst Navbar = (props) => {\n    return (\n        <div className={style.navWrap}>\n            <nav className={style.nav}>\n                <div className={style.item}>\n                    <NavLink className={style.itemLink} activeClassName={style.activeLink}\n                             to=\"/profile\">Profile</NavLink>\n                </div>\n                <div className={style.item}>\n                    <NavLink className={style.itemLink} activeClassName={style.activeLink}\n                             to=\"/dialogs\">Messages</NavLink>\n                </div>\n                <div className={style.item}>\n                    <NavLink className={style.itemLink} activeClassName={style.activeLink}\n                             to=\"/users\">Users</NavLink>\n                </div>\n\n                {/*<div className={style.item}>\n                    <NavLink className={style.itemLink} activeClassName={style.activeLink} to=\"/news\">News</NavLink>\n                </div>\n                <div className={style.item}>\n                    <NavLink className={style.itemLink} activeClassName={style.activeLink} to=\"/music\">Music</NavLink>\n                </div>\n                <div className={style.item}>\n                    <NavLink className={style.itemLink} activeClassName={style.activeLink}\n                             to=\"/settings\">Settings</NavLink>\n                </div>*/}\n\n            </nav>\n\n            {/*<FriendsBlockContainer/>*/}\n        </div>\n    )\n};\n\nexport default Navbar;\n\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n};","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'usersReducer/FOLLOW';\nconst UNFOLLOW = 'usersReducer/UNFOLLOW';\nconst SET_USERS = 'usersReducer/SET_USERS';\nconst SET_CURRENT_PAGE = 'usersReducer/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'usersReducer/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'usersReducer/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'usersReducer/TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n               users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            };\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n            };\n\n        case SET_USERS:\n            return {...state, users: action.users};\n\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage};\n\n        case SET_TOTAL_USERS_COUNT:\n            return {...state, totalUsersCount: action.totalUsersCount};\n\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : [...state.followingInProgress.filter(id => id !== action.userId)]\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const followSucces = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSucces = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({\n    type: SET_TOTAL_USERS_COUNT,\n    totalUsersCount: totalUsersCount\n});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n});\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setPage(page));\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    };\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let data = await apiMethod(userId);\n\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSucces)\n    };\n};\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSucces)\n    };\n};\n\nexport default usersReducer;","import React, {useState} from \"react\";\nimport style from \"./Paginator.module.css\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionNumber = portionNumber * portionSize;\n\n\n    return (\n        <div>\n\n            {portionNumber > 1 &&\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\n\n            {pages\n                .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\n                .map(p => {\n                return <button key={p} onClick={(e) => {\n                    onPageChanged(p)\n                }} className={currentPage === p ? style.selectedPage : null}>{p}</button>\n            })}\n\n            {portionCount > portionNumber &&\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\n\n        </div>\n    )\n};\n\nexport default Paginator;","import React from \"react\";\nimport style from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/user1.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div>\n                    <span>\n                        <div>\n                            <NavLink to={'/profile/' + user.id}>\n                                <img className={style.userPic}\n                                     src={user.photos.small != null ? user.photos.small : userPhoto}\n                                     alt=\"\"/>\n                            </NavLink>\n                        </div>\n                        <div>\n                            {user.followed ?\n                                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                                    unfollow(user.id);\n\n                                }}>Unfollow</button> :\n\n                                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                                    follow(user.id);\n\n\n                                }}>Follow</button>}\n                        </div>\n                    </span>\n            <span>\n                        <span>\n                            <div>{user.name}</div>\n                            <div>{user.status}</div>\n                        </span>\n                        {/*<span>\n                            <div>{user.location.city}</div>\n                            <div>{user.location.country}</div>\n                        </span>*/}\n                    </span>\n        </div>\n\n    )\n};\n\nexport default User;","import React from \"react\";\nimport style from './Users.module.css'\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalItemsCount, pageSize, onPageChanged, users, ...props}) => {\n\n    return (\n        <div className={style.users}>\n\n            <Paginator totalItemsCount={totalItemsCount}\n                       currentPage={currentPage}\n                       onPageChanged={onPageChanged}\n                       pageSize={pageSize}/>\n            <div>\n                {users.map(u => <User user={u} key={u.id}\n                                      follow={props.follow}\n                                      unfollow={props.unfollow}\n                                      followingInProgress={props.followingInProgress}/>)}\n            </div>\n        </div>\n    )\n};\n\nexport default Users;","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n      return state.usersPage.users\n};\n\nexport const getUsers = createSelector( getUsersSelector, (users) => {\n    return users.filter(u => true)\n});\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n};\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n};\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n};\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n};\n\nexport const getFollowingInProgres = (state) => {\n    return state.usersPage.followingInProgress\n};","import {connect} from 'react-redux';\nimport {\n    follow, requestUsers,\n    setPage, toggleFollowingProgress,\n    unfollow\n} from '../../redux/users-reducer';\nimport '../../App.css';\nimport React from 'react';\nimport Users from './Users';\nimport Preloader from \"../common/preloader/Preloader.jsx\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgres,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount(): void {\n        const {currentPage, pageSize} = this.props;\n        this.props.requestUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.requestUsers(pageNumber, pageSize);\n    };\n\n    render() {\n\n        return <>\n            {this.props.isFetching ?\n                <Preloader/> : null}\n            <Users totalItemsCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgres(state)\n    };\n};\n\nexport default compose(\n        connect(mapStateToProps, {follow, unfollow, setPage, toggleFollowingProgress, requestUsers})\n)(UsersContainer);","import React from 'react';\nimport style from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport logo from './../../assets/images/logo.svg'\nimport logoRedux from './../../assets/images/Redux.svg'\n\nconst Header = (props) => {\n\n    /*if (!props.isAuth) {\n        return <Redirect to={\"/login\"}/>\n    }*/\n\n    return (\n\n        <header className={style.header}>\n            <div className={style.container}>\n                <div className={style.logoBlock}>\n                    <img className={style.logo} src={logo} alt=\"\"/>\n                    <img className={style.logoRedux} src={logoRedux} alt=\"\"/>\n                </div>\n\n                <div className={style.loginBlock}>\n                    {\n                        props.isAuth\n                            ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n                            : <NavLink className={style.loginLink} to={'/login'}>Login</NavLink>\n                    }\n                </div>\n            </div>\n        </header>\n\n    )\n};\n\nexport default Header;\n","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'authReducer/SET_USER_DATA';\nconst GET_CAPTCHA_SUCCES = 'authReducer/GET_CAPTCHA_SUCCES';\n\nlet initialState = {\n    usersId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n};\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_SUCCES:\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const setAuthUserData = (usersId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {usersId, email, login, isAuth}\n});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_SUCCES, payload: {captchaUrl}});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n};\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        //success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl())\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n        dispatch(stopSubmit('login', {_error: message}));\n    }\n};\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n};\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    let response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n};\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return (\n                <Header {...this.props}/>\n        )\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);\n","import React from \"react\";\nimport {reduxForm} from \"redux-form\";\nimport {required} from \"../../utils/validators/validators\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from './../common/FormsControls/FormsControls.module.css'\nimport styles from './Login.module.css'\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit} className={styles.loginForm}>\n            <div className={styles.loginInput}>\n                {createField('Email', 'email', Input, [required])}\n            </div>\n\n            <div className={styles.loginInput}>\n                {createField('Password', 'password', Input, [required], {type: 'password'})}\n            </div>\n\n            <div>\n                <label className={styles.rememberBlock}>\n                    {createField(null, 'rememberMe', Input, [], {type: 'checkbox'})}\n                    <span>Remember me</span>\n                </label>\n            </div>\n\n            {error && <div className={style.formError}>\n                {error}\n            </div>}\n\n            {captchaUrl && <img className={styles.captcha} src={captchaUrl} alt=\"\"/>}\n            {captchaUrl && createField(\n                'Symbols from image',\n                'captcha',\n                Input,\n                [required],\n                {})}\n\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n\n    );\n};\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div className={styles.loginWrap}>\n            <h1>Login</h1>\n            <p>test account: free@samuraijs.com</p>\n            <p>password: free</p>\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'appReducer/INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const intializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        })\n};\n\nexport default appReducer;","let initialState = {\n    friends: [\n        {firstName: 'Empty', secondName: 'Jhon', userId:1},\n        {firstName: 'Marry', secondName: 'Marry', userId:2},\n        {firstName: 'Empty', secondName: 'Bill', userId:3},\n        {firstName: 'Clint', secondName: 'Eastwood', userId:4}\n    ]\n};\n\nconst navbarReducer = (state = initialState, action) => {\n    return state;\n};\n\nexport default navbarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport navbarReducer from \"./navbar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    navBar: navbarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import React, {Suspense} from \"react\";\n\nexport const withSuspense = (Component) => {\n\n    return (props) => {\n        return (\n            <Suspense fallback={<div>Loading...</div>}>\n                <Component {...props}/>\n            </Suspense>\n        )\n    }\n};","import React from 'react';\nimport './App.css';\nimport {HashRouter, Switch, Redirect, Route, withRouter} from \"react-router-dom\";\nimport Navbar from './components/Navbar/Navbar';\n// import News from \"./components/News/News\";\n// import Music from \"./components/Music/Music\";\n// import Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {intializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/WithSuspense\";\n\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component<{}> {\n\n    catchAllUnhandledErrors = () => {\n        alert('Some error occured!');\n        console.error()\n    };\n\n    componentDidMount(): void {\n        this.props.intializeApp();\n        window.addEventListener('unhandlerejectdion', this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount(): void {\n        window.removeEventListener('unhandlerejectdion', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"mainWrap\">\n                <HeaderContainer/>\n\n                <div className=\"container\">\n                    <Navbar/>\n                    <div className=\"content\">\n                        <Switch>\n                            <Route exact path='/'\n                                   render={() => <Redirect to={\"/profile\"}/>}/>\n                            <Route path='/profile/:userId?'\n                                   render={withSuspense(ProfileContainer)}/>\n                            <Route path='/dialogs'\n                                   render={withSuspense(DialogsContainer)}/>\n                            <Route path='/users'\n                                   render={() => <UsersContainer/>}/>\n\n                           {/* <Route path='/news' component={News}/>\n                            <Route path='/music' component={Music}/>\n                            <Route path='/settings' component={Settings}/>*/}\n\n                            <Route path='/login'\n                                   render={() => <Login/>}/>\n                            <Route path='*'\n                                   render={() => <div>404 NOT FOUND</div>}/>\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {intializeApp}))(App);\n\nlet MainApp = (props) => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    )\n};\n\nexport default MainApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainApp/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrap\":\"Login_loginWrap__PKn1R\",\"loginForm\":\"Login_loginForm__1Hg13\",\"loginInput\":\"Login_loginInput__2W0-l\",\"rememberBlock\":\"Login_rememberBlock__1C3NB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrap\":\"FormsControls_loginWrap__2Pn8x\",\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formError\":\"FormsControls_formError__1XsRY\"};","import React from \"react\";\nimport preloader from \"../../../assets/images/bars.svg\";\n\nconst Preloader = (props) => {\n    return (\n        <div className=\"loader\">\n            <img src={preloader} alt=\"\"/>\n        </div>\n    )\n};\n\nexport default Preloader;","export const required = (value) => {\n    if (value) return undefined;\n\n    return 'Field is required';\n};\n\nexport const maxLengthCreator = (maxlength) => (value) => {\n    if (value.length > maxlength) return `Max length is ${maxlength} symbols`;\n\n    return undefined;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2Iv27\",\"userPic\":\"Users_userPic__1_BqH\"};","import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'profileReducer/ADD_POST';\nconst DELETE_POST = 'profileReducer/DELETE_POST';\nconst SET_USER_PROFILE = 'profileReducer/SET_USER_PROFILE';\nconst SET_STATUS = 'profileReducer/SET_STATUS';\nconst SAVE_PHOTO_SUCCESS = 'profileReducer/SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hello React!', likesCount: 23},\n        {id: 2, message: 'It\\'s nice work', likesCount: 11},\n        {id: 3, message: 'Awesome!', likesCount: 7}\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case ADD_POST: {\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                newPostText: '',\n                posts: [...state.posts, newPost]\n            }\n        }\n\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        }\n\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n\n        case SAVE_PHOTO_SUCCESS: {\n            return {...state, profile: {...state.profile, photos: action.photos}, }\n        }\n\n        default:\n            return state;\n\n\n    }\n};\n\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const deletePostAC = (postId) => ({type: DELETE_POST, postId});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    const response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    try {\n        const response = await profileAPI.updateStatus(status);\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n    } catch (error) {\n        debugger\n    }\n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n    const response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0 ) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n};\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.usersId;\n    const response = await profileAPI.saveProfile(profile);\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\n        // dispatch(stopSubmit('edit-profile', {\"contacts\": { \"facebook\": response.data.messages[0]}}))\n        return Promise.reject( response.data.messages[0])\n    }\n\n};\n\nexport default profileReducer;"],"sourceRoot":""}