{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","style","dialog","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","messages","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","d","key","messagesElements","messagesData","m","isAuth","dialogs","dialogsItems","dialogsItemsMessage","values","addMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,sFCWjDC,EARI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAMC,QAClB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAjC,IAAuCL,EAAMM,KAA7C,OCEGC,EANC,SAACP,GACb,OACI,iCAAOA,EAAMQ,QAAb,M,yCCiCFC,EAAcC,YAAiB,IAmB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAjBL,SAACZ,GAEpB,OACI,0BAAMC,UAAWC,IAAMY,SAAUC,SAAUf,EAAMgB,cAC7C,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXb,KAAK,iBACLc,YAAY,qBACZC,SAAU,CAACC,IAAUb,MAEhC,6BACI,oDASDc,EAnDC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMD,GAAIwB,EAAExB,GAAIyB,IAAKD,EAAExB,QACxF0B,EAAmBP,EAAMQ,aAAaJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASH,GAAI4B,EAAE5B,GAAIyB,IAAKG,EAAE5B,QAMjG,OAAKL,EAAMkC,OAOP,yBAAKjC,UAAWC,IAAMiC,SAClB,yBAAKlC,UAAWC,IAAMkC,cACjBV,GAEL,yBAAKzB,UAAWC,IAAMmC,qBACjBN,EACD,kBAACpB,EAAD,CAAqBI,SAjBb,SAACuB,GACjBtC,EAAMuC,WAAWD,EAAOE,qBAIjB,kBAAC,IAAD,CAAUpC,GAAI,Y,yDChBzBqC,EAA6B,SAACjB,GAAD,MAAY,CACzCU,OAAQV,EAAMkB,KAAKR,S,OCeRS,sBACPC,aAdc,SAACpB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACoB,GACtB,MAAO,CACHN,WAAY,SAACC,GACTK,EAASC,YAAkBN,UDPP,SAACO,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKjD,MAAMkC,OAET,kBAACa,EAAcE,KAAKjD,OAFK,kBAAC,IAAD,CAAUI,GAAI,eAHX,GACX8C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCG9DL,CAGbpB","file":"static/js/4.e6ffe808.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\"};","import React from 'react';\nimport style from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return (\n        <div className={style.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id}> {props.name} </NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;","import React from 'react';\n// import style from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div> {props.message} </div>\n    )\n};\n\nexport default Message;","import React from 'react';\nimport style from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogsData.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\n    let messagesElements = state.messagesData.map(m => <Message message={m.message} id={m.id} key={m.id}/>);\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageBody)\n    };\n\n    if (!props.isAuth) {\n        return <Redirect to={'/login'}/>\n    }\n\n\n\n    return (\n        <div className={style.dialogs}>\n            <div className={style.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={style.dialogsItemsMessage}>\n                {messagesElements}\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n};\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n\n    return (\n        <form className={style.messages} onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name='newMessageBody'\n                       placeholder='Enter your message'\n                       validate={[required, maxLength50]}/>\n            </div>\n            <div>\n                <button>Add message</button>\n            </div>\n        </form>\n    )\n};\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\n\n\nexport default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {return <Redirect to={'/login'}/>}\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n};","import Dialogs from \"./Dialogs\";\nimport {addMessageCreator} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageCreator(newMessageBody));\n        }\n    }\n};\n\nexport default compose(\n        connect(mapStateToProps, mapDispatchToProps),\n        withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}